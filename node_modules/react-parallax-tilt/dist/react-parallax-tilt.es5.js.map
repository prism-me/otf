{"version":3,"file":"react-parallax-tilt.es5.js","sources":["../src/features/tilt/defaultProps.ts","../src/react-parallax-tilt/defaultProps.ts","../src/features/glare/defaultProps.ts","../src/common/utils.ts","../src/features/tilt/Tilt.ts","../src/features/glare/Glare.ts","../src/react-parallax-tilt/ReactParallaxTilt.tsx"],"sourcesContent":["import { TiltProps } from './types';\n\nexport const defaultTiltProps: TiltProps = {\n  tiltEnable: true,\n  tiltReverse: false,\n  tiltAngleXInitial: 0,\n  tiltAngleYInitial: 0,\n  tiltMaxAngleX: 20,\n  tiltMaxAngleY: 20,\n  tiltAxis: null,\n  tiltAngleXManual: null,\n  tiltAngleYManual: null,\n};\n","import { Props } from './types';\nimport { defaultTiltProps } from '../features/tilt/defaultProps';\nimport { defaultGlareProps } from '../features/glare/defaultProps';\n\nexport const defaultProps: Props = {\n  scale: 1,\n  perspective: 1000,\n  flipVertically: false,\n  flipHorizontally: false,\n  reset: true,\n  transitionEasing: 'cubic-bezier(.03,.98,.52,.99)',\n  transitionSpeed: 400,\n  trackOnWindow: false,\n  gyroscope: false,\n  ...defaultTiltProps,\n  ...defaultGlareProps,\n};\n","import { GlareProps } from './types';\n\nexport const defaultGlareProps: GlareProps = {\n  glareEnable: false,\n  glareMaxOpacity: 0.7,\n  glareColor: '#ffffff',\n  glarePosition: 'bottom',\n  glareReverse: false,\n};\n","export function setTransition<T extends HTMLElement>(\n  element: T,\n  property: string,\n  duration: number,\n  timing: string,\n  timeoutId: number | null = null,\n): number {\n  if (timeoutId) {\n    clearTimeout(timeoutId);\n  }\n  element.style.transition = `${property} ${duration}ms ${timing}`;\n  return setTimeout(() => {\n    element.style.transition = '';\n  }, duration) as any;\n}\n\nexport function constrainToRange(value: number, rangeMin: number, rangeMax: number): number {\n  return Math.min(Math.max(value, rangeMin), rangeMax);\n}\n","import { TiltProps } from './types';\nimport { constrainToRange } from '../../common/utils';\nimport { ClientPosition } from '../../common/types';\nimport { IStyle } from '../../common/IStyle';\n\nconst TILT_ANGLE_CONSTRAINT = 90;\n\nexport class Tilt<T extends HTMLElement> implements IStyle {\n  public glareAngle: number = 0;\n  public glareOpacity: number = 0;\n\n  public transitionTimeoutId: number | undefined;\n\n  public tiltAngleX: number = 0;\n  public tiltAngleY: number = 0;\n  public tiltAngleXPercentage: number = 0;\n  public tiltAngleYPercentage: number = 0;\n\n  public update = (wrapperElClientPosition: ClientPosition, props: TiltProps): void => {\n    this.updateTilt(wrapperElClientPosition, props);\n    this.updateTiltManualInput(wrapperElClientPosition, props);\n    this.updateTiltReverse(props);\n    this.updateTiltLimits(props);\n  };\n\n  private updateTilt = (wrapperElClientPosition: ClientPosition, props: TiltProps): void => {\n    const { xPercentage, yPercentage } = wrapperElClientPosition;\n    const { tiltMaxAngleX, tiltMaxAngleY } = props;\n\n    // Calculate tilt angle x/y\n    const tiltTowardMouse = -1;\n    this.tiltAngleX = (xPercentage! * tiltMaxAngleX!) / 100;\n    this.tiltAngleY = ((yPercentage! * tiltMaxAngleY!) / 100) * tiltTowardMouse;\n  };\n\n  private updateTiltManualInput = (wrapperElClientPosition: ClientPosition, props: TiltProps): void => {\n    const { tiltAngleXManual, tiltAngleYManual, tiltMaxAngleX, tiltMaxAngleY } = props;\n    // if manual input prop is passed, ignore other inputs\n    if (tiltAngleXManual !== null || tiltAngleYManual !== null) {\n      this.tiltAngleX = tiltAngleXManual !== null ? tiltAngleXManual! : 0;\n      this.tiltAngleY = tiltAngleYManual !== null ? tiltAngleYManual! : 0;\n      wrapperElClientPosition.xPercentage = (100 * this.tiltAngleX) / tiltMaxAngleX!;\n      wrapperElClientPosition.yPercentage = (100 * this.tiltAngleY) / tiltMaxAngleY!;\n    }\n  };\n\n  private updateTiltReverse = (props: TiltProps): void => {\n    const tiltReverse = props.tiltReverse ? -1 : 1;\n    this.tiltAngleX = tiltReverse * this.tiltAngleX;\n    this.tiltAngleY = tiltReverse * this.tiltAngleY;\n  };\n\n  private updateTiltLimits = (props: TiltProps): void => {\n    const { tiltAxis } = props;\n\n    // constrain tilt angles\n    this.tiltAngleX = constrainToRange(this.tiltAngleX, -TILT_ANGLE_CONSTRAINT, TILT_ANGLE_CONSTRAINT);\n    this.tiltAngleY = constrainToRange(this.tiltAngleY, -TILT_ANGLE_CONSTRAINT, TILT_ANGLE_CONSTRAINT);\n\n    // disable x/y axis for tilting\n    if (tiltAxis) {\n      this.tiltAngleX = tiltAxis === 'x' ? this.tiltAngleX : 0;\n      this.tiltAngleY = tiltAxis === 'y' ? this.tiltAngleY : 0;\n    }\n  };\n\n  public updateTiltAnglesPercentage = (props: TiltProps): void => {\n    const { tiltMaxAngleX, tiltMaxAngleY } = props;\n\n    this.tiltAngleXPercentage = (this.tiltAngleX / tiltMaxAngleX!) * 100;\n    this.tiltAngleYPercentage = (this.tiltAngleY / tiltMaxAngleY!) * 100;\n  };\n\n  public render = (element: T): void => {\n    element.style.transform += `rotateX(${this.tiltAngleX}deg) rotateY(${this.tiltAngleY}deg) `;\n  };\n}\n","import { GlareProps, GlareSize } from './types';\nimport { constrainToRange } from '../../common/utils';\nimport { ElementSizePosition, ClientPosition } from '../../common/types';\nimport { IStyle } from '../../common/IStyle';\n\nexport class Glare implements IStyle {\n  public glareWrapperEl: HTMLDivElement;\n  public glareEl: HTMLDivElement;\n\n  public glareAngle: number = 0;\n  public glareOpacity: number = 0;\n\n  public transitionTimeoutId: number | undefined;\n\n  constructor(wrapperElSize: ElementSizePosition) {\n    this.glareWrapperEl = document.createElement('div');\n    this.glareEl = document.createElement('div');\n    this.glareWrapperEl.appendChild(this.glareEl);\n    this.glareWrapperEl.className = 'glare-wrapper';\n    this.glareEl.className = 'glare';\n\n    const styleGlareWrapper = {\n      position: 'absolute',\n      top: '0',\n      left: '0',\n      width: '100%',\n      height: '100%',\n      overflow: 'hidden',\n    };\n\n    const glareSize = this.calculateGlareSize(wrapperElSize);\n    const styleGlare = {\n      position: 'absolute',\n      top: '50%',\n      left: '50%',\n      'transform-origin': '0% 0%',\n      'pointer-events': 'none',\n      width: `${glareSize.width}px`,\n      height: `${glareSize.height}px`,\n    };\n\n    Object.assign(this.glareWrapperEl.style, styleGlareWrapper);\n    Object.assign(this.glareEl.style, styleGlare);\n  }\n\n  private calculateGlareSize = (wrapperElSize: ElementSizePosition): GlareSize => {\n    const { width: w, height: h } = wrapperElSize;\n    const wrapperElDiagonal = Math.sqrt(w! ** 2 + h! ** 2);\n    return {\n      width: wrapperElDiagonal,\n      height: wrapperElDiagonal,\n    };\n  };\n\n  public setSize = (wrapperElSize: ElementSizePosition): void => {\n    const glareSize = this.calculateGlareSize(wrapperElSize);\n    this.glareEl.style.width = `${glareSize.width}px`;\n    this.glareEl.style.height = `${glareSize.height}px`;\n  };\n\n  public update = (\n    wrapperElClientPosition: ClientPosition,\n    props: GlareProps,\n    flipVertically: boolean,\n    flipHorizontally: boolean,\n  ): void => {\n    this.updateAngle(wrapperElClientPosition, props.glareReverse!);\n    this.updateOpacity(wrapperElClientPosition, props, flipVertically, flipHorizontally);\n  };\n\n  private updateAngle = (wrapperElClientPosition: ClientPosition, glareReverse: boolean): void => {\n    const { xPercentage, yPercentage } = wrapperElClientPosition;\n\n    const rad2Deg = 180 / Math.PI;\n    // top 0째, right +90째, bottom -+180째, left -90째\n    const glareAngle: number = xPercentage ? Math.atan2(yPercentage, -xPercentage) * rad2Deg : 0;\n\n    const addGlareAngle: number = glareReverse ? 180 : 0;\n    this.glareAngle = glareAngle - addGlareAngle;\n  };\n\n  private updateOpacity = (\n    wrapperElClientPosition: ClientPosition,\n    props: GlareProps,\n    flipVertically: boolean,\n    flipHorizontally: boolean,\n  ): void => {\n    const { xPercentage, yPercentage } = wrapperElClientPosition;\n    const { glarePosition, glareReverse, glareMaxOpacity } = props;\n\n    const flipVerticallyFactor = flipVertically ? -1 : 1;\n    const flipHorizontallyFactor = flipHorizontally ? -1 : 1;\n\n    let glareOpacityFactor: number;\n    switch (glarePosition) {\n      case 'top':\n        glareOpacityFactor = -xPercentage! * flipVerticallyFactor;\n        break;\n      case 'right':\n        glareOpacityFactor = yPercentage! * flipHorizontallyFactor;\n        break;\n      case 'bottom':\n        glareOpacityFactor = xPercentage! * flipVerticallyFactor;\n        break;\n      case 'left':\n        glareOpacityFactor = -yPercentage! * flipHorizontallyFactor;\n        break;\n      case 'all':\n        glareOpacityFactor = Math.hypot(xPercentage, yPercentage);\n        break;\n      default:\n        glareOpacityFactor = xPercentage! * flipVerticallyFactor;\n    }\n\n    glareOpacityFactor = glareReverse ? -glareOpacityFactor : glareOpacityFactor;\n    const glareOpacityFactorRemoveNegative: number = constrainToRange(glareOpacityFactor, 0, 100);\n    this.glareOpacity = (glareOpacityFactorRemoveNegative * glareMaxOpacity!) / 100;\n  };\n\n  public render = (props: GlareProps): void => {\n    const { glareColor } = props;\n    this.glareEl.style.transform = `rotate(${this.glareAngle}deg) translate(-50%, -50%)`;\n    this.glareEl.style.opacity = this.glareOpacity.toString();\n\n    const linearGradient: string = `linear-gradient(0deg, rgba(255,255,255,0) 0%, ${glareColor} 100%)`;\n    this.glareEl.style.background = linearGradient;\n  };\n}\n","import React, { PureComponent, MouseEvent, TouchEvent } from 'react';\n\nimport { Props, SupportedEvent, EventType, CustomEventType, WrapperElement } from './types';\nimport { defaultProps } from './defaultProps';\nimport { Tilt } from '../features/tilt/Tilt';\nimport { Glare } from '../features/glare/Glare';\nimport { setTransition, constrainToRange } from '../common/utils';\n\nclass ReactParallaxTilt extends PureComponent<Props> {\n  public static defaultProps = defaultProps;\n  private wrapperEl: WrapperElement<HTMLDivElement> = {\n    node: null,\n    size: {\n      width: 0,\n      height: 0,\n      left: 0,\n      top: 0,\n    },\n    clientPosition: {\n      x: null,\n      y: null,\n      xPercentage: 0,\n      yPercentage: 0,\n    },\n    transitionTimeoutId: undefined,\n    updateAnimationId: null,\n    childrenImgsCounter: 0,\n    childrenImgsLength: 0,\n    scale: 1,\n  };\n  private tilt: Tilt<HTMLDivElement> | null = null;\n  private glare: Glare | null = null;\n\n  public componentDidMount() {\n    this.loadWrapperAndChildElements();\n    this.tilt = new Tilt<HTMLDivElement>();\n    this.initGlare();\n    this.addEventListeners();\n    const autoreset = new CustomEvent<CustomEventType>('autoreset' as CustomEventType);\n    this.mainLoop(autoreset);\n    const initialEvent = new CustomEvent<CustomEventType>('initial' as CustomEventType);\n    this.emitOnMove(initialEvent);\n  }\n\n  public componentWillUnmount() {\n    clearTimeout(this.wrapperEl.transitionTimeoutId);\n    if (this.wrapperEl.updateAnimationId !== null) {\n      cancelAnimationFrame(this.wrapperEl.updateAnimationId);\n    }\n    this.removeEventListeners();\n  }\n\n  private addEventListeners() {\n    const { trackOnWindow, gyroscope } = this.props;\n\n    window.addEventListener('resize', this.setSize);\n\n    if (trackOnWindow) {\n      window.addEventListener('mouseenter', this.onEnter);\n      window.addEventListener('mousemove', this.onMove);\n      window.addEventListener('mouseout', this.onLeave);\n      window.addEventListener('touchstart', this.onEnter);\n      window.addEventListener('touchmove', this.onMove);\n      window.addEventListener('touchend', this.onLeave);\n    }\n\n    if (gyroscope) {\n      this.addDeviceOrientationEventListener();\n    }\n  }\n\n  /* istanbul ignore next */\n  private addDeviceOrientationEventListener = async () => {\n    if (!window.DeviceOrientationEvent) {\n      if (!process.env.NODE_ENV || process.env.NODE_ENV === 'development') {\n        console.warn(\"Browser doesn't support Device Orientation.\");\n      }\n      return;\n    }\n\n    const iOS13OrHigherDevice = typeof DeviceMotionEvent.requestPermission === 'function';\n    if (iOS13OrHigherDevice) {\n      try {\n        const response = await DeviceOrientationEvent.requestPermission();\n        if (response === 'granted') {\n          window.addEventListener('deviceorientation', this.onMove);\n        }\n        return;\n      } catch (err) {\n        console.error(err);\n        return;\n      }\n    }\n\n    window.addEventListener('deviceorientation', this.onMove);\n  };\n\n  private removeEventListeners() {\n    const { trackOnWindow, gyroscope } = this.props;\n\n    window.removeEventListener('resize', this.setSize);\n\n    if (trackOnWindow) {\n      window.removeEventListener('mouseenter', this.onEnter);\n      window.removeEventListener('mousemove', this.onMove);\n      window.removeEventListener('mouseout', this.onLeave);\n      window.removeEventListener('touchstart', this.onEnter);\n      window.removeEventListener('touchmove', this.onMove);\n      window.removeEventListener('touchend', this.onLeave);\n    }\n\n    // jest - instance of DeviceOrientationEvent not possible\n    /* istanbul ignore next */\n    if (gyroscope && window.DeviceOrientationEvent) {\n      window.removeEventListener('deviceorientation', this.onMove);\n    }\n  }\n\n  private loadWrapperAndChildElements = () => {\n    const imgs = Array.from(this.wrapperEl.node!.getElementsByTagName('img'));\n    this.wrapperEl.childrenImgsLength = imgs.length;\n    if (this.wrapperEl.childrenImgsLength === 0) {\n      this.setSize();\n      return;\n    }\n\n    imgs.forEach((img) => {\n      // jest - images are not preloaded\n      /* istanbul ignore next */\n      if (img.complete) {\n        this.allImagesLoaded();\n      } else {\n        img.addEventListener('load', this.allImagesLoaded);\n      }\n    });\n  };\n\n  public allImagesLoaded = () => {\n    this.wrapperEl.childrenImgsCounter++;\n    if (this.wrapperEl.childrenImgsCounter === this.wrapperEl.childrenImgsLength) {\n      this.setSize();\n    }\n  };\n\n  public setSize = () => {\n    this.setWrapperElSize();\n    if (this.glare) {\n      this.glare.setSize(this.wrapperEl.size);\n    }\n  };\n\n  private setWrapperElSize() {\n    const rect = this.wrapperEl.node!.getBoundingClientRect();\n    this.wrapperEl.size.width = this.wrapperEl.node!.offsetWidth;\n    this.wrapperEl.size.height = this.wrapperEl.node!.offsetHeight;\n    this.wrapperEl.size.left = rect.left + window.scrollX;\n    this.wrapperEl.size.top = rect.top + window.scrollY;\n  }\n\n  private initGlare() {\n    const { glareEnable } = this.props;\n\n    if (!glareEnable) {\n      return;\n    }\n\n    this.glare = new Glare(this.wrapperEl.size);\n    this.wrapperEl.node!.appendChild(this.glare.glareWrapperEl);\n  }\n\n  public mainLoop = (event: SupportedEvent) => {\n    if (this.wrapperEl.updateAnimationId !== null) {\n      cancelAnimationFrame(this.wrapperEl.updateAnimationId);\n    }\n    this.processInput(event);\n    this.update(event.type);\n    this.wrapperEl.updateAnimationId = requestAnimationFrame(this.renderFrame);\n  };\n\n  private onEnter = (event: SupportedEvent) => {\n    const { onEnter } = this.props;\n\n    // increase performance by notifying browser 'transform' property is just about to get changed\n    this.wrapperEl.node!.style.willChange = 'transform';\n    this.setTransition();\n\n    if (onEnter) {\n      onEnter(event.type);\n    }\n  };\n\n  private onMove = (event: SupportedEvent): void => {\n    this.mainLoop(event);\n    this.emitOnMove(event);\n  };\n\n  private emitOnMove(event: SupportedEvent) {\n    const { onMove } = this.props;\n    if (!onMove) {\n      return;\n    }\n    let glareAngle = 0;\n    let glareOpacity = 0;\n    if (this.glare) {\n      glareAngle = this.glare.glareAngle;\n      glareOpacity = this.glare.glareOpacity;\n    }\n\n    onMove(\n      this.tilt!.tiltAngleX!,\n      this.tilt!.tiltAngleY!,\n      this.tilt!.tiltAngleXPercentage!,\n      this.tilt!.tiltAngleYPercentage!,\n      glareAngle,\n      glareOpacity,\n      event.type,\n    );\n  }\n\n  private onLeave = (event: SupportedEvent) => {\n    const { onLeave } = this.props;\n    this.setTransition();\n\n    if (onLeave) {\n      onLeave(event.type);\n    }\n\n    if (this.props.reset) {\n      const autoResetEvent = new CustomEvent<CustomEventType>('autoreset' as CustomEventType);\n      this.onMove(autoResetEvent);\n    }\n  };\n\n  private processInput = (event: SupportedEvent): void => {\n    const { scale } = this.props;\n\n    switch (event.type as EventType) {\n      case 'mousemove':\n        this.wrapperEl.clientPosition.x = (event as MouseEvent).pageX;\n        this.wrapperEl.clientPosition.y = (event as MouseEvent).pageY;\n        this.wrapperEl.scale = scale!;\n        break;\n      case 'touchmove':\n        this.wrapperEl.clientPosition.x = (event as TouchEvent).touches[0].pageX;\n        this.wrapperEl.clientPosition.y = (event as TouchEvent).touches[0].pageY;\n        this.wrapperEl.scale = scale!;\n        break;\n      // jest - instance of DeviceOrientationEvent not possible\n      /* istanbul ignore next */\n      case 'deviceorientation':\n        this.processInputDeviceOrientation(event as DeviceOrientationEvent);\n        this.wrapperEl.scale = scale!;\n        break;\n      case 'autoreset':\n        const { tiltAngleXInitial, tiltAngleYInitial, tiltMaxAngleX, tiltMaxAngleY } = this.props;\n        const xPercentage = (tiltAngleXInitial! / tiltMaxAngleX!) * 100;\n        const yPercentage = (tiltAngleYInitial! / tiltMaxAngleY!) * 100;\n        this.wrapperEl.clientPosition.xPercentage = constrainToRange(xPercentage, -100, 100);\n        this.wrapperEl.clientPosition.yPercentage = constrainToRange(yPercentage, -100, 100);\n        this.wrapperEl.scale = 1;\n        break;\n    }\n  };\n\n  // jest - instance of DeviceOrientationEvent not possible\n  /* istanbul ignore next */\n  private processInputDeviceOrientation = (event: DeviceOrientationEvent): void => {\n    if (!event.gamma || !event.beta || !this.props.gyroscope) {\n      return;\n    }\n\n    const { tiltMaxAngleX, tiltMaxAngleY } = this.props;\n\n    const angleX = event.beta; // motion of the device around the x axis in degree in the range:[-180,180]\n    const angleY = event.gamma; // motion of the device around the y axis in degree in the range:[-90,90]\n\n    this.wrapperEl.clientPosition.xPercentage = (angleX! / tiltMaxAngleX!) * 100;\n    this.wrapperEl.clientPosition.yPercentage = (angleY! / tiltMaxAngleY!) * 100;\n\n    this.wrapperEl.clientPosition.xPercentage = constrainToRange(\n      this.wrapperEl.clientPosition.xPercentage,\n      -100,\n      100,\n    );\n    this.wrapperEl.clientPosition.yPercentage = constrainToRange(\n      this.wrapperEl.clientPosition.yPercentage,\n      -100,\n      100,\n    );\n  };\n\n  private update = (eventType: EventType | string): void => {\n    const { tiltEnable, flipVertically, flipHorizontally } = this.props;\n\n    this.updateClientInput(eventType);\n    if (tiltEnable) {\n      this.tilt!.update(this.wrapperEl.clientPosition, this.props);\n    }\n    this.updateFlip();\n    this.tilt!.updateTiltAnglesPercentage(this.props);\n    if (this.glare) {\n      this.glare.update(this.wrapperEl.clientPosition, this.props, flipVertically!, flipHorizontally!);\n    }\n  };\n\n  private updateClientInput = (eventType: EventType | string): void => {\n    // on 'autoreset' event - nothing to update, everything set to default already\n    // on 'deviceorientation' event - don't calculate tilt angle, retrieved from gyroscope\n    if (eventType === 'autoreset' || eventType === 'deviceorientation') {\n      return;\n    }\n\n    const { trackOnWindow } = this.props;\n\n    let xTemp;\n    let yTemp;\n    if (trackOnWindow) {\n      const { x, y } = this.wrapperEl.clientPosition;\n\n      xTemp = (y! / window.innerHeight) * 200 - 100;\n      yTemp = (x! / window.innerWidth) * 200 - 100;\n    } else {\n      const {\n        size: { width, height, left, top },\n        clientPosition: { x, y },\n      } = this.wrapperEl;\n\n      xTemp = ((y! - top!) / height!) * 200 - 100;\n      yTemp = ((x! - left!) / width!) * 200 - 100;\n    }\n\n    this.wrapperEl.clientPosition.xPercentage = constrainToRange(xTemp, -100, 100);\n    this.wrapperEl.clientPosition.yPercentage = constrainToRange(yTemp, -100, 100);\n  };\n\n  private updateFlip = (): void => {\n    const { flipVertically, flipHorizontally } = this.props;\n\n    if (flipVertically) {\n      this.tilt!.tiltAngleX += 180;\n      this.tilt!.tiltAngleY *= -1;\n    }\n    if (flipHorizontally) {\n      this.tilt!.tiltAngleY += 180;\n    }\n  };\n\n  public renderFrame = (): void => {\n    this.resetWrapperElTransform();\n\n    this.renderPerspective();\n    this.tilt!.render(this.wrapperEl.node!);\n    this.renderScale();\n    if (this.glare) {\n      this.glare.render(this.props);\n    }\n  };\n\n  private resetWrapperElTransform(): void {\n    this.wrapperEl.node!.style.transform = '';\n  }\n\n  private renderPerspective(): void {\n    const { perspective } = this.props;\n\n    this.wrapperEl.node!.style.transform += `perspective(${perspective}px) `;\n  }\n\n  private renderScale(): void {\n    const { scale } = this.wrapperEl;\n\n    this.wrapperEl.node!.style.transform += `scale3d(${scale},${scale},${scale})`;\n  }\n\n  private setTransition() {\n    const { transitionSpeed, transitionEasing } = this.props;\n\n    this.wrapperEl.transitionTimeoutId = setTransition<HTMLDivElement>(\n      this.wrapperEl.node!,\n      'all',\n      transitionSpeed!,\n      transitionEasing!,\n      this.wrapperEl.transitionTimeoutId,\n    );\n\n    if (this.glare) {\n      this.glare.transitionTimeoutId = setTransition<HTMLDivElement>(\n        this.glare.glareEl,\n        'opacity',\n        transitionSpeed!,\n        transitionEasing!,\n        this.glare.transitionTimeoutId,\n      );\n    }\n  }\n\n  public render() {\n    const { children, className, style } = this.props;\n    return (\n      <div\n        ref={(el) => (this.wrapperEl.node = el)}\n        onMouseEnter={this.onEnter}\n        onMouseMove={this.onMove}\n        onMouseLeave={this.onLeave}\n        onTouchStart={this.onEnter}\n        onTouchMove={this.onMove}\n        onTouchEnd={this.onLeave}\n        className={className}\n        style={style}\n      >\n        {children}\n      </div>\n    );\n  }\n}\n\nexport default ReactParallaxTilt;\n"],"names":["defaultProps","scale","perspective","flipVertically","flipHorizontally","reset","transitionEasing","transitionSpeed","trackOnWindow","gyroscope","tiltEnable","tiltReverse","tiltAngleXInitial","tiltAngleYInitial","tiltMaxAngleX","tiltMaxAngleY","tiltAxis","tiltAngleXManual","tiltAngleYManual","glareEnable","glareMaxOpacity","glareColor","glarePosition","glareReverse","setTransition","element","property","duration","timing","timeoutId","clearTimeout","style","transition","setTimeout","constrainToRange","value","rangeMin","rangeMax","Math","min","max","this","wrapperElClientPosition","props","_this","updateTilt","updateTiltManualInput","updateTiltReverse","updateTiltLimits","yPercentage","tiltAngleX","tiltAngleY","xPercentage","tiltAngleXPercentage","tiltAngleYPercentage","transform","wrapperElSize","h","wrapperElDiagonal","sqrt","width","height","glareSize","calculateGlareSize","glareEl","updateAngle","updateOpacity","rad2Deg","PI","glareAngle","atan2","glareOpacityFactor","flipVerticallyFactor","flipHorizontallyFactor","hypot","glareOpacityFactorRemoveNegative","glareOpacity","opacity","toString","background","glareWrapperEl","document","createElement","appendChild","className","styleGlare","position","top","left","transform-origin","pointer-events","Object","assign","overflow","node","size","clientPosition","x","y","transitionTimeoutId","undefined","updateAnimationId","childrenImgsCounter","childrenImgsLength","window","DeviceOrientationEvent","process","env","NODE_ENV","console","warn","DeviceMotionEvent","requestPermission","_a","addEventListener","onMove","error","err_1","imgs","Array","from","wrapperEl","getElementsByTagName","length","forEach","img","complete","allImagesLoaded","setSize","setWrapperElSize","glare","event","cancelAnimationFrame","processInput","update","type","requestAnimationFrame","renderFrame","onEnter","willChange","mainLoop","emitOnMove","onLeave","autoResetEvent","CustomEvent","pageX","pageY","touches","processInputDeviceOrientation","gamma","beta","angleY","eventType","updateClientInput","tilt","updateFlip","updateTiltAnglesPercentage","xTemp","yTemp","innerHeight","innerWidth","_b","_c","_d","resetWrapperElTransform","renderPerspective","render","renderScale","__extends","ReactParallaxTilt","loadWrapperAndChildElements","Tilt","initGlare","addEventListeners","autoreset","initialEvent","removeEventListeners","addDeviceOrientationEventListener","removeEventListener","rect","getBoundingClientRect","offsetWidth","offsetHeight","scrollX","scrollY","Glare","React","ref","el","onMouseEnter","onMouseMove","onMouseLeave","onTouchStart","onTouchMove","onTouchEnd","PureComponent"],"mappings":"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"}