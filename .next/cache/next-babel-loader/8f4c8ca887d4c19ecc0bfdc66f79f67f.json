{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Modal, ModalBody, Form, FormGroup, Input, Row, Col, Container } from 'reactstrap';\n\nvar StartBurning = function StartBurning(props) {\n  var location = [\"Mercato Mall\", \"Times Square Centre\"];\n  return __jsx(React.Fragment, null, __jsx(Modal, {\n    isOpen: props.show,\n    className: \"sburning\"\n  }, __jsx(ModalBody, null, __jsx(Container, null, __jsx(\"p\", {\n    className: \"modalIconWrape\"\n  }, __jsx(\"i\", {\n    \"aria-hidden\": \"true\",\n    className: \"fa fa-close modalIconStyle\",\n    onClick: props.onHide\n  })), __jsx(Form, {\n    className: \"offer-form\"\n  }, __jsx(\"h3\", {\n    className: \"offer-subtext\"\n  }, \"Start Burning\"), __jsx(FormGroup, null, __jsx(Input, {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    placeholder: \"Full name\",\n    className: \"inputStyle\",\n    required: true\n  })), __jsx(Row, {\n    form: true\n  }, __jsx(Col, {\n    md: 6\n  }, __jsx(FormGroup, null, __jsx(Input, {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    placeholder: \"Email address\",\n    className: \"inputStyle\",\n    required: true\n  }))), __jsx(Col, {\n    md: 6\n  }, __jsx(FormGroup, null, __jsx(Input, {\n    type: \"text\",\n    name: \"phone\",\n    id: \"phone\",\n    placeholder: \"Phone number\",\n    className: \"inputStyle\",\n    required: true\n  })))), __jsx(FormGroup, null, __jsx(Input, {\n    type: \"select\",\n    name: \"select\",\n    id: \"exampleSelect\",\n    className: \"inputStyle\",\n    required: true,\n    style: {\n      color: \"#c6c6c9\"\n    }\n  }, __jsx(\"option\", {\n    style: {\n      color: \"#495057\"\n    }\n  }, \"Select Location\"), location && location.length > 0 && location.map(function (x) {\n    return __jsx(\"option\", {\n      style: {\n        color: \"#495057\"\n      },\n      key: x\n    }, x);\n  }))), __jsx(\"button\", {\n    className: \"offerBtn px-5 mt-3\"\n  }, \"Submit\"))))));\n};\n\nexport default StartBurning;","map":null,"metadata":{},"sourceType":"module"}